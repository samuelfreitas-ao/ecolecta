-- Ferramentas essenciais
1. Power shell no windows, para gestão de dependências

1.Instalar o chocolatey: instruções em: (https://chocolatey.org/install)
	Este componente permitirá instalar o NodeJs

2. Instalar o NodeJs (Versão lts)
	Site: nodejs.org. Ao invés de baixar o setup pode executar o comando: 
		cinst nodejs (significa chocolatey install nodejs)

3. Instalação e gestão de dependências
	1. Iniciando o projecto
		npm init -y (-y cria o projecto com as propriedades padão, sem perguntar o nome, descrição, etc)
	2. npm install express
		Instalar este componente para gestão de rotas
		Ou ainda executar: npm install @types/espress -D (para reconhecer os tipos métodos e propriedades que instanciasmos. -D significa que é só para fim de desenvolvimento)
	3. npm ts-node -D (ts-node = typescript node, dependência para de node de typescript, porque o node só reconhece o js<> ts)
	4. npm ts-node-dev -D (faz com que execute o projecto sempre que salvar, caso contrário seguirá 	sempre o ponto 4.3 / 4.2). Pode adicionar --tranpileOnly --ignore-watch node_modules para 		acelerar a compilação: ts-node-dev --tranpileOnly --ignore-watch node_modules src/server.ts
	5. npm install typescript -D (instalação do typescript)

4. npx (executar um pacote que instalamos)
	1. npx tsc --init (iniciar o typescript - arquivo de configuração)
	2. npx ts-node src/server.ts (Executa o projecto. Onde src = pasta do ficheiro principal e server.ts o ficheiro principal para requisições)
	3. Ctrl + c para a execução

5. Facilidade de execução de projecto
	1. Ao invés de executarmos sempre o "npx tsc-node src/server.ts" por ser lonog, podemos substrituir no ficheiro package.json:
		a) scripts:{"test":""} para scripts:{"dev":"ts-node src/server.ts"} e executar: npm run dev (aonde dev pode ser qualquer termo)
npm istall multer: para uploads

6. React js
	1. npx create-react-app nome_projecto --template=typescript
	2. npm start (para correr o projecto)
	3. npm install react-icons (Instala icones do react)
	4. npm install react-router-dom (instala gerenciador de rotas do react)
	5. npm install leaflet react-leaflet (Instala os mapas para utilizar no react)
	5. npm install axios (Biblioteca para requisições a uma api. Vantagens: permite criar uma baseUrl para ser reutilizada em todo projecto)
	6. yarn add ou npm install cors (Cross-Origin Resource Sharing-compartilhamento de recursos de origem cruzada)
		:para configurar que endereços web terão acesso a api



7. Rest API
	1. Softwares para testar requisições como cliente:
		a) Postman (https://www.postman.com/downloads)
		b) Insomnia (https://insomnia.rest/download/#windows)

8. Base de dados
	1. KNEX (knexjs.org)
		É uma dependência para gerenciamento de banco de dados de modo unificado, via js
	2. Instalar
		npm install knex
	3. SGBD's
		1. Sqlite3
			a) Instalação: 
				npm install sqlite3
			b) Configuração:
			conexao = knex({
			  	client: 'sqlite3',
			  	connection: {
			    	filename: "./mydb.sqlite"
			  	}
			 })

		2. MySql
			a) Instalação: 
				npm install mysql
			b) Configuração:
			conexao = knex({
			  	client: 'mysql',
			  	connection: {
				    host : '127.0.0.1',
				    user : 'your_database_user',
				    password : 'your_database_password',
				    database : 'myapp_test'
			})

	4. Migrations:
		npx knex migrate:latest --knexfile knexfile.ts migrate:latest (aonde knexfile.ts, o nome é opcional)

9. React Native
	1. Expo: é um framework e uma plataforma para aplicações universais do React Native)
		1. npm install expo (Instala a dependências expo)
		2. npm install -g expo-cli (Instala o a interface de linha de comando (CLI) do expo. -g indica que será instalado de forma global e ser acedido em qualquer parte do sistema)
		3. expo init nome_projecto (para criar um projecto)
			1. Use as setas para selecionar o template requerido
		4. npm start (para iniciar o projecto-abri np navegador)
		5. npm install @react-navigation/native (Inatala dependência de navegagação)
		5. expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view
		6. expo install expo-font @expo-google-fonts/ubuntu @expo-google-fonts/roboto: instalação de google fonts ubuntu e roboto
		7. react navigation 
			1. npm install @react-navigation/native: instalar pacotes de botão de navegação
			2. expo install react-native-gesture-handler react-native-reanimated react-native-screens react-native-safe-area-context @react-native-community/masked-view
			3. npm install @react-navigation/stack: Para navegação em pilha (guardar todas as telas anterior para possibilitar voltar)
		8. expo install react-native-maps: instalação de mapa
		9. expo install expo-constants
		10. expo install react-native-svg: para suporte de imagem svg(vector)
		11. expo install expo-location: fornece a geolocalização do usuário
		12. expo install expo-mail-composer
		13. npm install react-native-picker-select: componente select/options
		13. npm install @react-native-community/picker --save: para expo

10. Git
	1. Ficheiros:
		a) .gitignore: especificar os ficheiros a serem ignorados no versionamento.
		b) readme.md: md = MarkDown, arquivo aonde descrevemos o projecto
	2. comandos
		1. git --help: Lista os comendos do git
		1. git init: iniciar o versionamento com o git
		1. git status: Paraverificar e mostrar os arquivos que ainda não foram versionados
		2. git add .: envia os arquivos na stage area para serem versionados
		3. git commit -m "Versão ou descrição da versão": Versiona e aplica uma descrição
	3. Configuração de repositório remoto
		1. git remote add origin url_repositorio: configuramos o caminho do respositório remoto
		2. git push origin master: serve mandar no repositório remoto, aonde master é nome da branch e origem é uma variável aonde atribuo a url do repositório. Obs: requer autenticação na 1ª vez.
		3. git pull origin master: serve para baixar actualizações do repositório remoto
	4. Branch
		1. git branch: lista as branchs, aonde a master é aonde fica o código estável para produção
		2. git branch nome_branch: cria uma nova branch
		3. git switch nome_branch: mudar de brunch
		4
	5. Git config
		1. git config --global --edit: serve para abrir o ficheiro com os dados do autor do repositório com o editor VIM
		2. Precionar a tecla I para começar a editar o ficheiro
		3. Tecla Esc para sair do modo de edição
		4. Dois pontos para escrever comando de saida: wq